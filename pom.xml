<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is the pom.xml used for Maven configuration and dependency management. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Project model version, specified as 4.0.0, which Maven uses -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Project-specific identity details -->
    <!-- Group ID: Typically the company or organization name, e.g., org.example -->
    <groupId>org.example</groupId>
    <!-- Artifact ID: A unique, short name for the project -->
    <artifactId>Cucumber_JDBC_UI_DB_Testing_Framework</artifactId>
    <!-- Project version: 1.0-SNAPSHOT indicates the project is in the development stage -->
    <version>1.0-SNAPSHOT</version>

    <!-- Additional configuration settings and project properties -->
    <properties>
        <!-- Java compiler version (Java 11) -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <!-- Encoding configuration for the project -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Language configuration (setting default language to English) -->
        <argLine>-Duser.language=en</argLine>
    </properties>

    <!-- Dependencies -->
    <dependencies>
        <!-- Selenium WebDriver library for browser automation -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.18.1</version>
        </dependency>

        <!-- Cucumber library for writing feature files in Gherkin syntax (used in Java) -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>7.9.0</version>
            <scope>test</scope>
        </dependency>

        <!-- TestNG library for organizing and managing test cases -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.5.1</version>
            <scope>test</scope>
        </dependency>

        <!-- Cucumber TestNG integration for running Cucumber tests within the TestNG framework -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>7.9.0</version>
            <scope>test</scope>
        </dependency>

        <!-- SLF4J API for logging (API only, requires implementation) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.8.0-beta2</version>
        </dependency>

        <!-- SLF4J Simple Logger for simple, console-based logging (used during testing) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.8.0-beta2</version>
            <scope>test</scope>
        </dependency>

        <!-- Apache Commons Lang for utilities to handle core Java functionalities (e.g., String manipulation) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.17.0</version>
        </dependency>

        <!-- ExtentReports adapter for Cucumber 7 to generate rich test reports -->
        <dependency>
            <groupId>tech.grasshopper</groupId>
            <artifactId>extentreports-cucumber7-adapter</artifactId>
            <version>1.10.1</version>
        </dependency>

        <!-- Apache POI library for reading and writing Microsoft Office Excel files -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.1.1</version>
        </dependency>

        <!-- Apache POI library (OOXML version) for handling Excel files in .xlsx format -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.1.1</version>
        </dependency>

        <!-- MySQL JDBC driver for database connection and interaction with MySQL databases -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.33</version>
        </dependency>

        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>

    </dependencies>

    <!-- Plugin configuration where we determine where Jenkins' run command will execute -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>

                    <!-- Uncomment the following suiteXmlFiles section to specify a custom XML test suite file -->
                    <!-- <suiteXmlFiles> -->
                    <!--    <suiteXmlFile>src/test/java/xml/SmokeTest.xml</suiteXmlFile> -->
                    <!-- </suiteXmlFiles> -->

                    <includes>
                        <!-- Specifies which class or classes to run; **/ allows locating by any folder structure -->
                        <include>**/_04_TestRunnerSmoke.java</include>
                    </includes>

                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!-- Profile for running Smoke tests -->
        <profile>
            <id>SmokeNew</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M1</version>
                        <configuration>

                            <!-- Uncomment the following suiteXmlFiles section to specify a custom XML test suite file -->
                            <!-- <suiteXmlFiles> -->
                            <!--    <suiteXmlFile>src/test/java/xml/SmokeTest.xml</suiteXmlFile> -->
                            <!-- </suiteXmlFiles> -->

                            <includes>
                                <!-- Specifies which class or classes to run; **/ allows locating by any folder structure -->
                                <include>**/_04_TestRunnerRegression.java</include>
                            </includes>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile for running Regression tests -->
        <profile>
            <id>Regression</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M1</version>
                        <configuration>

                            <!-- Uncomment the following suiteXmlFiles section to specify a custom XML test suite file -->
                            <!-- <suiteXmlFiles> -->
                            <!--    <suiteXmlFile>src/test/java/xml/RegressionTest.xml</suiteXmlFile> -->
                            <!-- </suiteXmlFiles> -->

                            <includes>
                                <!-- Specifies which class or classes to run; **/ allows locating by any folder structure -->
                                <include>**/_05_TestRunnerRegression.java</include>
                            </includes>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
